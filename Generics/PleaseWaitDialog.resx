<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picDistraction.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picDistraction.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picDistraction.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="myTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>