
'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Data.EntityClient
Imports System.ComponentModel
Imports System.Xml.Serialization
Imports System.Runtime.Serialization

<Assembly: EdmSchemaAttribute("da6aaac0-754b-4e52-bd01-e49572c3dd23")>
#Region "EDM Relationship Metadata"
<Assembly: EdmRelationshipAttribute("DataModel", "RootBranch", "Root", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Root), "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Branch), True)>
<Assembly: EdmRelationshipAttribute("DataModel", "BranchLeaf", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Branch), "Leaf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Leaf), True)>
<Assembly: EdmRelationshipAttribute("DataModel", "BranchInsect", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Branch), "Insect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Insect), True)>
<Assembly: EdmRelationshipAttribute("DataModel", "LeafInsect", "Leaf", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Leaf), "Insect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Insect), True)>

#End Region

#Region "Contexts"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
Public Partial Class DataModelContainer
    Inherits ObjectContext

    #Region "Constructors"

    ''' <summary>
    ''' Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
    ''' </summary>
    Public Sub New()
        MyBase.New("name=DataModelContainer", "DataModelContainer")
    MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new DataModelContainer object.
    ''' </summary>
    Public Sub New(ByVal connectionString As String)
        MyBase.New(connectionString, "DataModelContainer")
    MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new DataModelContainer object.
    ''' </summary>
    Public Sub New(ByVal connection As EntityConnection)
        MyBase.New(connection, "DataModelContainer")
    MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    #End Region

    #Region "Partial Methods"

    Partial Private Sub OnContextCreated()
    End Sub

    #End Region

    #Region "ObjectSet Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Roots() As ObjectSet(Of Root)
        Get
            If (_Roots Is Nothing) Then
                _Roots = MyBase.CreateObjectSet(Of Root)("Roots")
            End If
            Return _Roots
        End Get
    End Property

    Private _Roots As ObjectSet(Of Root)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Branches() As ObjectSet(Of Branch)
        Get
            If (_Branches Is Nothing) Then
                _Branches = MyBase.CreateObjectSet(Of Branch)("Branches")
            End If
            Return _Branches
        End Get
    End Property

    Private _Branches As ObjectSet(Of Branch)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Leaves() As ObjectSet(Of Leaf)
        Get
            If (_Leaves Is Nothing) Then
                _Leaves = MyBase.CreateObjectSet(Of Leaf)("Leaves")
            End If
            Return _Leaves
        End Get
    End Property

    Private _Leaves As ObjectSet(Of Leaf)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Insects() As ObjectSet(Of Insect)
        Get
            If (_Insects Is Nothing) Then
                _Insects = MyBase.CreateObjectSet(Of Insect)("Insects")
            End If
            Return _Insects
        End Get
    End Property

    Private _Insects As ObjectSet(Of Insect)

    #End Region
    #Region "AddTo Methods"

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Roots EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRoots(ByVal root As Root)
        MyBase.AddObject("Roots", root)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Branches EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToBranches(ByVal branch As Branch)
        MyBase.AddObject("Branches", branch)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Leaves EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToLeaves(ByVal leaf As Leaf)
        MyBase.AddObject("Leaves", leaf)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Insects EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInsects(ByVal insect As Insect)
        MyBase.AddObject("Insects", insect)
    End Sub

    #End Region
End Class

#End Region
#Region "Entities"

''' <summary>
''' Sub data of main data item
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="DataModel", Name:="Branch")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Branch
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Branch object.
    ''' </summary>
    ''' <param name="index">Initial value of the Index property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="rootIndex">Initial value of the RootIndex property.</param>
    Public Shared Function CreateBranch(index As Global.System.Int32, name As Global.System.String, rootIndex As Global.System.Int32) As Branch
        Dim branch as Branch = New Branch
        branch.Index = index
        branch.Name = name
        branch.RootIndex = rootIndex
        Return branch
    End Function

    #End Region
    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Index() As Global.System.Int32
        Get
            Return _Index
        End Get
        Set
            If (_Index <> Value) Then
                OnIndexChanging(value)
                ReportPropertyChanging("Index")
                _Index = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Index")
                OnIndexChanged()
            End If
        End Set
    End Property

    Private _Index As Global.System.Int32
    Private Partial Sub OnIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIndexChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RootIndex() As Global.System.Int32
        Get
            Return _RootIndex
        End Get
        Set
            OnRootIndexChanging(value)
            ReportPropertyChanging("RootIndex")
            _RootIndex = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RootIndex")
            OnRootIndexChanged()
        End Set
    End Property

    Private _RootIndex As Global.System.Int32
    Private Partial Sub OnRootIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRootIndexChanged()
    End Sub

    #End Region
    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "RootBranch", "Root")>
    Public Property Root() As Root
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Root)("DataModel.RootBranch", "Root").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Root)("DataModel.RootBranch", "Root").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RootReference() As EntityReference(Of Root)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Root)("DataModel.RootBranch", "Root")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Root)("DataModel.RootBranch", "Root", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "BranchLeaf", "Leaf")>
     Public Property Leaves() As EntityCollection(Of Leaf)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Leaf)("DataModel.BranchLeaf", "Leaf")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Leaf)("DataModel.BranchLeaf", "Leaf", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "BranchInsect", "Insect")>
     Public Property Insects() As EntityCollection(Of Insect)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Insect)("DataModel.BranchInsect", "Insect")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Insect)("DataModel.BranchInsect", "Insect", value)
            End If
        End Set
    End Property

    #End Region
End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="DataModel", Name:="Insect")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Insect
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Insect object.
    ''' </summary>
    ''' <param name="index">Initial value of the Index property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateInsect(index As Global.System.Int32, name As Global.System.String) As Insect
        Dim insect as Insect = New Insect
        insect.Index = index
        insect.Name = name
        Return insect
    End Function

    #End Region
    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Index() As Global.System.Int32
        Get
            Return _Index
        End Get
        Set
            If (_Index <> Value) Then
                OnIndexChanging(value)
                ReportPropertyChanging("Index")
                _Index = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Index")
                OnIndexChanged()
            End If
        End Set
    End Property

    Private _Index As Global.System.Int32
    Private Partial Sub OnIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIndexChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property BranchIndex() As Nullable(Of Global.System.Int32)
        Get
            Return _BranchIndex
        End Get
        Set
            OnBranchIndexChanging(value)
            ReportPropertyChanging("BranchIndex")
            _BranchIndex = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("BranchIndex")
            OnBranchIndexChanged()
        End Set
    End Property

    Private _BranchIndex As Nullable(Of Global.System.Int32)
    Private Partial Sub OnBranchIndexChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnBranchIndexChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property LeafIndex() As Nullable(Of Global.System.Int32)
        Get
            Return _LeafIndex
        End Get
        Set
            OnLeafIndexChanging(value)
            ReportPropertyChanging("LeafIndex")
            _LeafIndex = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("LeafIndex")
            OnLeafIndexChanged()
        End Set
    End Property

    Private _LeafIndex As Nullable(Of Global.System.Int32)
    Private Partial Sub OnLeafIndexChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnLeafIndexChanged()
    End Sub

    #End Region
    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "BranchInsect", "Branch")>
    Public Property Branch() As Branch
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchInsect", "Branch").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchInsect", "Branch").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property BranchReference() As EntityReference(Of Branch)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchInsect", "Branch")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Branch)("DataModel.BranchInsect", "Branch", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "LeafInsect", "Leaf")>
    Public Property Leaf() As Leaf
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Leaf)("DataModel.LeafInsect", "Leaf").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Leaf)("DataModel.LeafInsect", "Leaf").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property LeafReference() As EntityReference(Of Leaf)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Leaf)("DataModel.LeafInsect", "Leaf")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Leaf)("DataModel.LeafInsect", "Leaf", value)
            End If
        End Set
    End Property

    #End Region
End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="DataModel", Name:="Leaf")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Leaf
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Leaf object.
    ''' </summary>
    ''' <param name="index">Initial value of the Index property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="branchIndex">Initial value of the BranchIndex property.</param>
    Public Shared Function CreateLeaf(index As Global.System.Int32, name As Global.System.String, branchIndex As Global.System.Int32) As Leaf
        Dim leaf as Leaf = New Leaf
        leaf.Index = index
        leaf.Name = name
        leaf.BranchIndex = branchIndex
        Return leaf
    End Function

    #End Region
    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Index() As Global.System.Int32
        Get
            Return _Index
        End Get
        Set
            If (_Index <> Value) Then
                OnIndexChanging(value)
                ReportPropertyChanging("Index")
                _Index = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Index")
                OnIndexChanged()
            End If
        End Set
    End Property

    Private _Index As Global.System.Int32
    Private Partial Sub OnIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIndexChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property BranchIndex() As Global.System.Int32
        Get
            Return _BranchIndex
        End Get
        Set
            OnBranchIndexChanging(value)
            ReportPropertyChanging("BranchIndex")
            _BranchIndex = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("BranchIndex")
            OnBranchIndexChanged()
        End Set
    End Property

    Private _BranchIndex As Global.System.Int32
    Private Partial Sub OnBranchIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnBranchIndexChanged()
    End Sub

    #End Region
    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "BranchLeaf", "Branch")>
    Public Property Branch() As Branch
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchLeaf", "Branch").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchLeaf", "Branch").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property BranchReference() As EntityReference(Of Branch)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Branch)("DataModel.BranchLeaf", "Branch")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Branch)("DataModel.BranchLeaf", "Branch", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "LeafInsect", "Insect")>
     Public Property Insects() As EntityCollection(Of Insect)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Insect)("DataModel.LeafInsect", "Insect")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Insect)("DataModel.LeafInsect", "Insect", value)
            End If
        End Set
    End Property

    #End Region
End Class

''' <summary>
''' A simple data item
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="DataModel", Name:="Root")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Root
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Root object.
    ''' </summary>
    ''' <param name="index">Initial value of the Index property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateRoot(index As Global.System.Int32, name As Global.System.String) As Root
        Dim root as Root = New Root
        root.Index = index
        root.Name = name
        Return root
    End Function

    #End Region
    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Index() As Global.System.Int32
        Get
            Return _Index
        End Get
        Set
            If (_Index <> Value) Then
                OnIndexChanging(value)
                ReportPropertyChanging("Index")
                _Index = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Index")
                OnIndexChanged()
            End If
        End Set
    End Property

    Private _Index As Global.System.Int32
    Private Partial Sub OnIndexChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIndexChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region
    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("DataModel", "RootBranch", "Branch")>
     Public Property Branches() As EntityCollection(Of Branch)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Branch)("DataModel.RootBranch", "Branch")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Branch)("DataModel.RootBranch", "Branch", value)
            End If
        End Set
    End Property

    #End Region
End Class

#End Region

